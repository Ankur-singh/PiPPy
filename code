INFO:root:[root] Running pipeline FillDrain
INFO:root:[root] Instantiating microbatch interpreter for chunk 0
INFO:root:[root] Instantiating microbatch interpreter for chunk 1
INFO:root:[root] Instantiating microbatch interpreter for chunk 2
INFO:root:[root] Instantiating microbatch interpreter for chunk 3
INFO:root:[root] 4 instantiated
INFO:root:[0] Issue command to run %x : [#users=2] = placeholder[target=x]
INFO:root:[0] Issue command to run %targets : [#users=2] = placeholder[target=targets]
INFO:root:[0] Issue command to run %submod_0 : [#users=3] = call_module[target=submod_0](args = (%x,), kwargs = {})
INFO:root:[root][0] Issuing Phase.FORWARD invocation for target submod_0 on rank 0
INFO:root:[2] Instantiating PipeStageExecutor
INFO:root:[1] Instantiating PipeStageExecutor
INFO:root:[0] Instantiating PipeStageExecutor
INFO:root:[0] Issue command to run %submod_1 : [#users=3] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
INFO:root:[root][0] Issuing Phase.FORWARD invocation for target submod_1 on rank 1
INFO:root:[0][0] Received invoke call for %submod_0 : [#users=3] = call_module[target=submod_0](args = (%x,), kwargs = {})
INFO:root:[0][0] Invoke call found 0 RRef arguments
INFO:root:[0][0] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=3] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 0_submod_0
INFO:root:[0][0] No RRef arguments. Scheduling directly as READY workitem
INFO:root:[0][0] Current ready runlist keys: dict_keys([])
INFO:root:[0] Dequeueing workitem from set of 1
INFO:root:[0][0] Got WorkItem WorkItem(%submod_0 : [#users=3] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0][0] Running forward module
INFO:root:[1][0] Received invoke call for %submod_1 : [#users=3] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
INFO:root:[1][0] Invoke call found 1 RRef arguments
INFO:root:[1][0] Invoke instantiated WorkItem WorkItem(%submod_1 : [#users=3] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})) with key 0_submod_1
INFO:root:[1][0] Scheduling WorkItem as WAITING workitem
INFO:root:[1][0] Current waiting runlist keys: dict_keys([])
INFO:root:[1][0] Launching asynchronous data transfer for RRef 0 UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=8), ForkId = GloballyUniqueId(created_on=0, local_id=11))
INFO:root:[3] Instantiating PipeStageExecutor
INFO:root:[1][0] Starting transfer
INFO:root:[0][0] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=8)) initiated by rank 1 for 0_submod_1
INFO:root:[0][0] Populating result of type <class 'torch.Tensor'> for 0_submod_0
INFO:root:[1][0] Completing transfer of value UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=8), ForkId = GloballyUniqueId(created_on=1, local_id=2)) from 0 for runlist item 0_submod_1
INFO:root:[1][0] All operands ready, initialize as READY workitem
INFO:root:[1] Dequeueing workitem from set of 1
INFO:root:[1][0] Got WorkItem WorkItem(%submod_1 : [#users=3] = call_module[target=submod_1](args = (%submod_0,), kwargs = {}))
INFO:root:[1][0] Running forward module
INFO:root:[1][0] Populating result of type <class 'torch.Tensor'> for 0_submod_1
INFO:root:[0] Issue command to run %submod_2 : [#users=3] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
INFO:root:[root][0] Issuing Phase.FORWARD invocation for target submod_2 on rank 2
INFO:root:[2][0] Received invoke call for %submod_2 : [#users=3] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
INFO:root:[2][0] Invoke call found 1 RRef arguments
INFO:root:[2][0] Invoke instantiated WorkItem WorkItem(%submod_2 : [#users=3] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})) with key 0_submod_2
INFO:root:[2][0] Scheduling WorkItem as WAITING workitem
INFO:root:[2][0] Current waiting runlist keys: dict_keys([])
INFO:root:[2][0] Launching asynchronous data transfer for RRef 0 UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=12), ForkId = GloballyUniqueId(created_on=0, local_id=16))
INFO:root:[2][0] Starting transfer
INFO:root:[1][0] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=12)) initiated by rank 2 for 0_submod_2
INFO:root:[2][0] Completing transfer of value UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=12), ForkId = GloballyUniqueId(created_on=2, local_id=2)) from 1 for runlist item 0_submod_2
INFO:root:[2][0] All operands ready, initialize as READY workitem
INFO:root:[2] Dequeueing workitem from set of 1
INFO:root:[2][0] Got WorkItem WorkItem(%submod_2 : [#users=3] = call_module[target=submod_2](args = (%submod_1,), kwargs = {}))
INFO:root:[2][0] Running forward module
INFO:root:[2][0] Populating result of type <class 'torch.Tensor'> for 0_submod_2
INFO:root:[0] Issue command to run %submod_3 : [#users=2] = call_module[target=submod_3](args = (%submod_2, %targets), kwargs = {})
INFO:root:[root][0] Issuing Phase.FORWARD invocation for target submod_3 on rank 3
INFO:root:[3][0] Received invoke call for %submod_3 : [#users=2] = call_module[target=submod_3](args = (%submod_2, %targets), kwargs = {})
INFO:root:[3][0] Invoke call found 1 RRef arguments
INFO:root:[3][0] Invoke instantiated WorkItem WorkItem(%submod_3 : [#users=2] = call_module[target=submod_3](args = (%submod_2, %targets), kwargs = {})) with key 0_submod_3
INFO:root:[3][0] Scheduling WorkItem as WAITING workitem
INFO:root:[3][0] Current waiting runlist keys: dict_keys([])
INFO:root:[3][0] Launching asynchronous data transfer for RRef 0 UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=17), ForkId = GloballyUniqueId(created_on=0, local_id=21))
INFO:root:[3][0] Starting transfer
INFO:root:[2][0] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=17)) initiated by rank 3 for 0_submod_3
INFO:root:[3][0] Completing transfer of value UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=17), ForkId = GloballyUniqueId(created_on=3, local_id=2)) from 2 for runlist item 0_submod_3
INFO:root:[3][0] All operands ready, initialize as READY workitem
INFO:root:[3] Dequeueing workitem from set of 1
INFO:root:[3][0] Got WorkItem WorkItem(%submod_3 : [#users=2] = call_module[target=submod_3](args = (%submod_2, %targets), kwargs = {}))
INFO:root:[3][0] Running forward module
INFO:root:[3][0] Populating result of type <class 'torch.Tensor'> for 0_submod_3
INFO:root:[0] Issue command to run %stage_backward : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_3, output_grads: None, input_values: [%submod_2, %targets]})
INFO:root:[root][0] Issuing BW invocation for target submod_3 on rank 3
INFO:root:[3][0] Received invoke call for %stage_backward : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_3, output_grads: None, input_values: [%submod_2, %targets]})
INFO:root:[3][0] Invoke call found 2 RRef arguments
INFO:root:[3][0] Invoke instantiated WorkItem WorkItem(%stage_backward : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_3, output_grads: None, input_values: [%submod_2, %targets]})) with key 0_stage_backward
INFO:root:[3][0] Scheduling WorkItem as WAITING workitem
INFO:root:[3][0] Current waiting runlist keys: dict_keys([])
INFO:root:[3][0] Launching asynchronous data transfer for RRef 0 OwnerRRef(GloballyUniqueId(created_on=0, local_id=22))
INFO:root:[3][0] Launching asynchronous data transfer for RRef 1 UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=17), ForkId = GloballyUniqueId(created_on=0, local_id=26))
INFO:root:[3][0] Starting transfer
INFO:root:[3][0] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=22)) initiated by rank 3 for 0_stage_backward
INFO:root:[3][0] Starting transfer
INFO:root:[2][0] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=17)) initiated by rank 3 for 0_stage_backward
INFO:root:[3][0] Completing transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=22)) from 3 for runlist item 0_stage_backward
INFO:root:[3][0] Still waiting for 1 operands.
INFO:root:[3][0] Completing transfer of value UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=17), ForkId = GloballyUniqueId(created_on=3, local_id=9)) from 2 for runlist item 0_stage_backward
INFO:root:[3][0] All operands ready, initialize as READY workitem
INFO:root:[3] Dequeueing workitem from set of 1
INFO:root:[3][0] Got WorkItem WorkItem(%stage_backward : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_3, output_grads: None, input_values: [%submod_2, %targets]}))
INFO:root:[3][0] Running backward phase. Retrieving stashed values
INFO:root:[3][0] Running backward
INFO:root:[3][0] Populating result of type <class 'tuple'> for 0_stage_backward
INFO:root:[0] Issue command to run %getitem : [#users=2] = call_function[target=operator.getitem](args = (%stage_backward, 0), kwargs = {})
INFO:root:[0] Issue command to run %getitem_1 : [#users=1] = call_function[target=operator.getitem](args = (%stage_backward, 1), kwargs = {})
INFO:root:[0] Issue command to run %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%getitem, 0), kwargs = {})
INFO:root:[0] Issue command to run %getitem_3 : [#users=0] = call_function[target=operator.getitem](args = (%getitem, 1), kwargs = {})
INFO:root:[0] Issue command to run %stage_backward_1 : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_2, output_grads: %getitem_2, input_values: [%submod_1]})
INFO:root:[root][0] Issuing BW invocation for target submod_2 on rank 2
INFO:root:[2][0] Received invoke call for %stage_backward_1 : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_2, output_grads: %getitem_2, input_values: [%submod_1]})
INFO:root:[2][0] Invoke call found 3 RRef arguments
INFO:root:[2][0] Invoke instantiated WorkItem WorkItem(%stage_backward_1 : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_2, output_grads: %getitem_2, input_values: [%submod_1]})) with key 0_stage_backward_1
INFO:root:[2][0] Scheduling WorkItem as WAITING workitem
INFO:root:[2][0] Current waiting runlist keys: dict_keys([])
INFO:root:[2][0] Launching asynchronous data transfer for RRef 0 OwnerRRef(GloballyUniqueId(created_on=0, local_id=17))
INFO:root:[2][0] Launching asynchronous data transfer for RRef 1 UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=38), ForkId = GloballyUniqueId(created_on=0, local_id=45))
INFO:root:[2][0] Launching asynchronous data transfer for RRef 2 UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=12), ForkId = GloballyUniqueId(created_on=0, local_id=46))
INFO:root:[2][0] Starting transfer
INFO:root:[2][0] Starting transfer
INFO:root:[2][0] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=17)) initiated by rank 2 for 0_stage_backward_1
INFO:root:[3][0] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=38)) initiated by rank 2 for 0_stage_backward_1
INFO:root:[2][0] Starting transfer
INFO:root:[2][0] Completing transfer of value UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=38), ForkId = GloballyUniqueId(created_on=2, local_id=9)) from 3 for runlist item 0_stage_backward_1
INFO:root:[2][0] Still waiting for 2 operands.
INFO:root:[2][0] Completing transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=17)) from 2 for runlist item 0_stage_backward_1
INFO:root:[1][0] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=12)) initiated by rank 2 for 0_stage_backward_1
INFO:root:[2][0] Still waiting for 1 operands.
INFO:root:[2][0] Completing transfer of value UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=12), ForkId = GloballyUniqueId(created_on=2, local_id=12)) from 1 for runlist item 0_stage_backward_1
INFO:root:[2][0] All operands ready, initialize as READY workitem
INFO:root:[2] Dequeueing workitem from set of 1
INFO:root:[2][0] Got WorkItem WorkItem(%stage_backward_1 : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_2, output_grads: %getitem_2, input_values: [%submod_1]}))
INFO:root:[2][0] Running backward phase. Retrieving stashed values
INFO:root:[2][0] Running backward
INFO:root:[2][0] Populating result of type <class 'tuple'> for 0_stage_backward_1
INFO:root:[0] Issue command to run %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%stage_backward_1, 0), kwargs = {})
INFO:root:[0] Issue command to run %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%stage_backward_1, 1), kwargs = {})
INFO:root:[0] Issue command to run %getitem_6 : [#users=1] = call_function[target=operator.getitem](args = (%getitem_4, 0), kwargs = {})
INFO:root:[0] Issue command to run %stage_backward_2 : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_1, output_grads: %getitem_6, input_values: [%submod_0]})
INFO:root:[root][0] Issuing BW invocation for target submod_1 on rank 1
INFO:root:[1][0] Received invoke call for %stage_backward_2 : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_1, output_grads: %getitem_6, input_values: [%submod_0]})
INFO:root:[1][0] Invoke call found 3 RRef arguments
INFO:root:[1][0] Invoke instantiated WorkItem WorkItem(%stage_backward_2 : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_1, output_grads: %getitem_6, input_values: [%submod_0]})) with key 0_stage_backward_2
INFO:root:[1][0] Scheduling WorkItem as WAITING workitem
INFO:root:[1][0] Current waiting runlist keys: dict_keys([])
INFO:root:[1][0] Launching asynchronous data transfer for RRef 0 OwnerRRef(GloballyUniqueId(created_on=0, local_id=12))
INFO:root:[1][0] Launching asynchronous data transfer for RRef 1 UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=58), ForkId = GloballyUniqueId(created_on=0, local_id=62))
INFO:root:[1][0] Starting transfer
INFO:root:[1][0] Launching asynchronous data transfer for RRef 2 UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=8), ForkId = GloballyUniqueId(created_on=0, local_id=63))
INFO:root:[1][0] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=12)) initiated by rank 1 for 0_stage_backward_2
INFO:root:[1][0] Starting transfer
INFO:root:[1][0] Starting transfer
INFO:root:[2][0] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=58)) initiated by rank 1 for 0_stage_backward_2
INFO:root:[1][0] Completing transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=12)) from 1 for runlist item 0_stage_backward_2
INFO:root:[1][0] Still waiting for 2 operands.
INFO:root:[1][0] Completing transfer of value UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=58), ForkId = GloballyUniqueId(created_on=1, local_id=9)) from 2 for runlist item 0_stage_backward_2
INFO:root:[1][0] Still waiting for 1 operands.
INFO:root:[0][0] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=8)) initiated by rank 1 for 0_stage_backward_2
INFO:root:[1][0] Completing transfer of value UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=8), ForkId = GloballyUniqueId(created_on=1, local_id=13)) from 0 for runlist item 0_stage_backward_2
INFO:root:[1][0] All operands ready, initialize as READY workitem
INFO:root:[1] Dequeueing workitem from set of 1
INFO:root:[1][0] Got WorkItem WorkItem(%stage_backward_2 : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_1, output_grads: %getitem_6, input_values: [%submod_0]}))
INFO:root:[1][0] Running backward phase. Retrieving stashed values
INFO:root:[1][0] Running backward
INFO:root:[1][0] Populating result of type <class 'tuple'> for 0_stage_backward_2
INFO:root:[0] Issue command to run %getitem_7 : [#users=1] = call_function[target=operator.getitem](args = (%stage_backward_2, 0), kwargs = {})
INFO:root:[0] Issue command to run %getitem_8 : [#users=1] = call_function[target=operator.getitem](args = (%stage_backward_2, 1), kwargs = {})
INFO:root:[0] Issue command to run %getitem_9 : [#users=1] = call_function[target=operator.getitem](args = (%getitem_7, 0), kwargs = {})
INFO:root:[0] Issue command to run %stage_backward_3 : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_0, output_grads: %getitem_9, input_values: [%x]})
INFO:root:[root][0] Issuing BW invocation for target submod_0 on rank 0
INFO:root:[0] Issue command to run %getitem_10 : [#users=1] = call_function[target=operator.getitem](args = (%stage_backward_3, 0), kwargs = {})
INFO:root:[0][0] Received invoke call for %stage_backward_3 : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_0, output_grads: %getitem_9, input_values: [%x]})
INFO:root:[0][0] Invoke call found 2 RRef arguments
INFO:root:[0][0] Invoke instantiated WorkItem WorkItem(%stage_backward_3 : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_0, output_grads: %getitem_9, input_values: [%x]})) with key 0_stage_backward_3
INFO:root:[0][0] Scheduling WorkItem as WAITING workitem
INFO:root:[0][0] Current waiting runlist keys: dict_keys([])
INFO:root:[0][0] Launching asynchronous data transfer for RRef 0 OwnerRRef(GloballyUniqueId(created_on=0, local_id=8))
INFO:root:[0][0] Launching asynchronous data transfer for RRef 1 UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=75), ForkId = GloballyUniqueId(created_on=0, local_id=79))
INFO:root:[0][0] Starting transfer
INFO:root:[0][0] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=8)) initiated by rank 0 for 0_stage_backward_3
INFO:root:[0][0] Starting transfer
INFO:root:[1][0] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=75)) initiated by rank 0 for 0_stage_backward_3
INFO:root:[0][0] Completing transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=8)) from 0 for runlist item 0_stage_backward_3
INFO:root:[0][0] Still waiting for 1 operands.
INFO:root:[0][0] Completing transfer of value UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=75), ForkId = GloballyUniqueId(created_on=0, local_id=86)) from 1 for runlist item 0_stage_backward_3
INFO:root:[0][0] All operands ready, initialize as READY workitem
INFO:root:[0] Dequeueing workitem from set of 1
INFO:root:[0][0] Got WorkItem WorkItem(%stage_backward_3 : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_0, output_grads: %getitem_9, input_values: [%x]}))
INFO:root:[0][0] Running backward phase. Retrieving stashed values
INFO:root:[0][0] Running backward
INFO:root:[0][0] Populating result of type <class 'tuple'> for 0_stage_backward_3
INFO:root:[0] Issue command to run %getitem_11 : [#users=1] = call_function[target=operator.getitem](args = (%stage_backward_3, 1), kwargs = {})
INFO:root:[0] Issue command to run %getitem_12 : [#users=0] = call_function[target=operator.getitem](args = (%getitem_10, 0), kwargs = {})
INFO:root:[0] Issue command to run %sync_barrier : [#users=1] = call_function[target=pippy.IR.sync_barrier](args = (%submod_3, [%getitem_1, %getitem_5, %getitem_8, %getitem_11]), kwargs = {})
INFO:root:[root][0] Issuing sync invocation on rank 3
INFO:root:[3][0] Received invoke call for %sync_barrier : [#users=1] = call_function[target=pippy.IR.sync_barrier](args = (%submod_3, [%getitem_1, %getitem_5, %getitem_8, %getitem_11]), kwargs = {})
INFO:root:[3][0] Invoke call found 5 RRef arguments
INFO:root:[3][0] Invoke instantiated WorkItem WorkItem(%sync_barrier : [#users=1] = call_function[target=pippy.IR.sync_barrier](args = (%submod_3, [%getitem_1, %getitem_5, %getitem_8, %getitem_11]), kwargs = {})) with key 0_sync_barrier
INFO:root:[3][0] Scheduling WorkItem as WAITING workitem
INFO:root:[3][0] Current waiting runlist keys: dict_keys([])
INFO:root:[3][0] Launching asynchronous data transfer for RRef 0 OwnerRRef(GloballyUniqueId(created_on=0, local_id=22))
INFO:root:[3][0] Launching asynchronous data transfer for RRef 1 OwnerRRef(GloballyUniqueId(created_on=0, local_id=34))
INFO:root:[3][0] Starting transfer
INFO:root:[3][0] Launching asynchronous data transfer for RRef 2 UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=54), ForkId = GloballyUniqueId(created_on=0, local_id=98))
INFO:root:[3][0] Starting transfer
INFO:root:[3][0] Launching asynchronous data transfer for RRef 3 UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=71), ForkId = GloballyUniqueId(created_on=0, local_id=99))
INFO:root:[3][0] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=22)) initiated by rank 3 for 0_sync_barrier
INFO:root:[3][0] Starting transfer
INFO:root:[3][0] Launching asynchronous data transfer for RRef 4 UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=92), ForkId = GloballyUniqueId(created_on=0, local_id=100))
INFO:root:[3][0] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=34)) initiated by rank 3 for 0_sync_barrier
INFO:root:[3][0] Completing transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=22)) from 3 for runlist item 0_sync_barrier
INFO:root:[2][0] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=54)) initiated by rank 3 for 0_sync_barrier
INFO:root:[3][0] Starting transfer
INFO:root:[3][0] Still waiting for 4 operands.
INFO:root:[1][0] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=71)) initiated by rank 3 for 0_sync_barrier
INFO:root:[3][0] Completing transfer of value UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=54), ForkId = GloballyUniqueId(created_on=3, local_id=21)) from 2 for runlist item 0_sync_barrier
INFO:root:[3][0] Completing transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=34)) from 3 for runlist item 0_sync_barrier
INFO:root:[3][0] Still waiting for 3 operands.
INFO:root:[3][0] Completing transfer of value UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=71), ForkId = GloballyUniqueId(created_on=3, local_id=25)) from 1 for runlist item 0_sync_barrier
INFO:root:[3][0] Still waiting for 2 operands.
INFO:root:[3][0] Still waiting for 1 operands.
INFO:root:[3][0] Starting transfer
INFO:root:[0][0] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=92)) initiated by rank 3 for 0_sync_barrier
INFO:root:[3][0] Completing transfer of value UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=92), ForkId = GloballyUniqueId(created_on=3, local_id=29)) from 0 for runlist item 0_sync_barrier
INFO:root:[3][0] All operands ready, initialize as READY workitem
INFO:root:[3] Dequeueing workitem from set of 1
INFO:root:[3][0] Got WorkItem WorkItem(%sync_barrier : [#users=1] = call_function[target=pippy.IR.sync_barrier](args = (%submod_3, [%getitem_1, %getitem_5, %getitem_8, %getitem_11]), kwargs = {}))
INFO:root:[3][0] Running sync_barrier
INFO:root:[3][0] Populating result of type <class 'torch.Tensor'> for 0_sync_barrier
INFO:root:[1] Issue command to run %x : [#users=2] = placeholder[target=x]
INFO:root:[1] Issue command to run %targets : [#users=2] = placeholder[target=targets]
INFO:root:[1] Issue command to run %submod_0 : [#users=3] = call_module[target=submod_0](args = (%x,), kwargs = {})
INFO:root:[root][1] Issuing Phase.FORWARD invocation for target submod_0 on rank 0
INFO:root:[1] Issue command to run %submod_1 : [#users=3] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
INFO:root:[root][1] Issuing Phase.FORWARD invocation for target submod_1 on rank 1
INFO:root:[1][1] Received invoke call for %submod_1 : [#users=3] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
INFO:root:[1][1] Invoke call found 1 RRef arguments
INFO:root:[1][1] Invoke instantiated WorkItem WorkItem(%submod_1 : [#users=3] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})) with key 1_submod_1
INFO:root:[1][1] Scheduling WorkItem as WAITING workitem
INFO:root:[1][1] Current waiting runlist keys: dict_keys([])
INFO:root:[1][1] Launching asynchronous data transfer for RRef 0 UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=104), ForkId = GloballyUniqueId(created_on=0, local_id=106))
INFO:root:[1][1] Starting transfer
INFO:root:[0][1] Received invoke call for %submod_0 : [#users=3] = call_module[target=submod_0](args = (%x,), kwargs = {})
INFO:root:[0][1] Invoke call found 0 RRef arguments
INFO:root:[0][1] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=104)) initiated by rank 1 for 1_submod_1
INFO:root:[0][1] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=3] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 1_submod_0
INFO:root:[0][1] No RRef arguments. Scheduling directly as READY workitem
INFO:root:[0][1] Current ready runlist keys: dict_keys([])
INFO:root:[0] Dequeueing workitem from set of 1
INFO:root:[0][1] Got WorkItem WorkItem(%submod_0 : [#users=3] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0][1] Running forward module
INFO:root:[0][1] Populating result of type <class 'torch.Tensor'> for 1_submod_0
INFO:root:[1][1] Completing transfer of value UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=104), ForkId = GloballyUniqueId(created_on=1, local_id=18)) from 0 for runlist item 1_submod_1
INFO:root:[1][1] All operands ready, initialize as READY workitem
INFO:root:[1] Dequeueing workitem from set of 1
INFO:root:[1][1] Got WorkItem WorkItem(%submod_1 : [#users=3] = call_module[target=submod_1](args = (%submod_0,), kwargs = {}))
INFO:root:[1][1] Running forward module
INFO:root:[1][1] Populating result of type <class 'torch.Tensor'> for 1_submod_1
INFO:root:[1] Issue command to run %submod_2 : [#users=3] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
INFO:root:[root][1] Issuing Phase.FORWARD invocation for target submod_2 on rank 2
INFO:root:[2][1] Received invoke call for %submod_2 : [#users=3] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})
INFO:root:[2][1] Invoke call found 1 RRef arguments
INFO:root:[2][1] Invoke instantiated WorkItem WorkItem(%submod_2 : [#users=3] = call_module[target=submod_2](args = (%submod_1,), kwargs = {})) with key 1_submod_2
INFO:root:[2][1] Scheduling WorkItem as WAITING workitem
INFO:root:[2][1] Current waiting runlist keys: dict_keys([])
INFO:root:[2][1] Launching asynchronous data transfer for RRef 0 UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=107), ForkId = GloballyUniqueId(created_on=0, local_id=110))
INFO:root:[2][1] Starting transfer
INFO:root:[1][1] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=107)) initiated by rank 2 for 1_submod_2
INFO:root:[2][1] Completing transfer of value UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=107), ForkId = GloballyUniqueId(created_on=2, local_id=18)) from 1 for runlist item 1_submod_2
INFO:root:[2][1] All operands ready, initialize as READY workitem
INFO:root:[2] Dequeueing workitem from set of 1
INFO:root:[2][1] Got WorkItem WorkItem(%submod_2 : [#users=3] = call_module[target=submod_2](args = (%submod_1,), kwargs = {}))
INFO:root:[2][1] Running forward module
INFO:root:[2][1] Populating result of type <class 'torch.Tensor'> for 1_submod_2
INFO:root:[1] Issue command to run %submod_3 : [#users=2] = call_module[target=submod_3](args = (%submod_2, %targets), kwargs = {})
INFO:root:[root][1] Issuing Phase.FORWARD invocation for target submod_3 on rank 3
INFO:root:[3][1] Received invoke call for %submod_3 : [#users=2] = call_module[target=submod_3](args = (%submod_2, %targets), kwargs = {})
INFO:root:[3][1] Invoke call found 1 RRef arguments
INFO:root:[3][1] Invoke instantiated WorkItem WorkItem(%submod_3 : [#users=2] = call_module[target=submod_3](args = (%submod_2, %targets), kwargs = {})) with key 1_submod_3
INFO:root:[3][1] Scheduling WorkItem as WAITING workitem
INFO:root:[3][1] Current waiting runlist keys: dict_keys([])
INFO:root:[3][1] Launching asynchronous data transfer for RRef 0 UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=111), ForkId = GloballyUniqueId(created_on=0, local_id=114))
INFO:root:[3][1] Starting transfer
INFO:root:[2][1] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=111)) initiated by rank 3 for 1_submod_3
INFO:root:[3][1] Completing transfer of value UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=111), ForkId = GloballyUniqueId(created_on=3, local_id=34)) from 2 for runlist item 1_submod_3
INFO:root:[3][1] All operands ready, initialize as READY workitem
INFO:root:[3] Dequeueing workitem from set of 1
INFO:root:[3][1] Got WorkItem WorkItem(%submod_3 : [#users=2] = call_module[target=submod_3](args = (%submod_2, %targets), kwargs = {}))
INFO:root:[3][1] Running forward module
INFO:root:[3][1] Populating result of type <class 'torch.Tensor'> for 1_submod_3
INFO:root:[1] Issue command to run %stage_backward : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_3, output_grads: None, input_values: [%submod_2, %targets]})
INFO:root:[root][1] Issuing BW invocation for target submod_3 on rank 3
INFO:root:[3][1] Received invoke call for %stage_backward : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_3, output_grads: None, input_values: [%submod_2, %targets]})
INFO:root:[3][1] Invoke call found 2 RRef arguments
INFO:root:[3][1] Invoke instantiated WorkItem WorkItem(%stage_backward : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_3, output_grads: None, input_values: [%submod_2, %targets]})) with key 1_stage_backward
INFO:root:[3][1] Scheduling WorkItem as WAITING workitem
INFO:root:[3][1] Current waiting runlist keys: dict_keys([])
INFO:root:[3][1] Launching asynchronous data transfer for RRef 0 OwnerRRef(GloballyUniqueId(created_on=0, local_id=115))
INFO:root:[3][1] Launching asynchronous data transfer for RRef 1 UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=111), ForkId = GloballyUniqueId(created_on=0, local_id=119))
INFO:root:[3][1] Starting transfer
INFO:root:[3][1] Starting transfer
INFO:root:[3][1] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=115)) initiated by rank 3 for 1_stage_backward
INFO:root:[2][1] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=111)) initiated by rank 3 for 1_stage_backward
INFO:root:[3][1] Completing transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=115)) from 3 for runlist item 1_stage_backward
INFO:root:[3][1] Still waiting for 1 operands.
INFO:root:[3][1] Completing transfer of value UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=111), ForkId = GloballyUniqueId(created_on=3, local_id=41)) from 2 for runlist item 1_stage_backward
INFO:root:[3][1] All operands ready, initialize as READY workitem
INFO:root:[3] Dequeueing workitem from set of 1
INFO:root:[3][1] Got WorkItem WorkItem(%stage_backward : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_3, output_grads: None, input_values: [%submod_2, %targets]}))
INFO:root:[3][1] Running backward phase. Retrieving stashed values
INFO:root:[3][1] Running backward
INFO:root:[3][1] Populating result of type <class 'tuple'> for 1_stage_backward
INFO:root:[1] Issue command to run %getitem : [#users=2] = call_function[target=operator.getitem](args = (%stage_backward, 0), kwargs = {})
INFO:root:[1] Issue command to run %getitem_1 : [#users=1] = call_function[target=operator.getitem](args = (%stage_backward, 1), kwargs = {})
INFO:root:[1] Issue command to run %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%getitem, 0), kwargs = {})
INFO:root:[1] Issue command to run %getitem_3 : [#users=0] = call_function[target=operator.getitem](args = (%getitem, 1), kwargs = {})
INFO:root:[1] Issue command to run %stage_backward_1 : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_2, output_grads: %getitem_2, input_values: [%submod_1]})
INFO:root:[root][1] Issuing BW invocation for target submod_2 on rank 2
INFO:root:[2][1] Received invoke call for %stage_backward_1 : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_2, output_grads: %getitem_2, input_values: [%submod_1]})
INFO:root:[2][1] Invoke call found 3 RRef arguments
INFO:root:[2][1] Invoke instantiated WorkItem WorkItem(%stage_backward_1 : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_2, output_grads: %getitem_2, input_values: [%submod_1]})) with key 1_stage_backward_1
INFO:root:[2][1] Scheduling WorkItem as WAITING workitem
INFO:root:[2][1] Current waiting runlist keys: dict_keys([])
INFO:root:[2][1] Launching asynchronous data transfer for RRef 0 OwnerRRef(GloballyUniqueId(created_on=0, local_id=111))
INFO:root:[2][1] Launching asynchronous data transfer for RRef 1 UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=131), ForkId = GloballyUniqueId(created_on=0, local_id=138))
INFO:root:[2][1] Starting transfer
INFO:root:[2][1] Launching asynchronous data transfer for RRef 2 UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=107), ForkId = GloballyUniqueId(created_on=0, local_id=139))
INFO:root:[2][1] Starting transfer
INFO:root:[2][1] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=111)) initiated by rank 2 for 1_stage_backward_1
INFO:root:[3][1] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=131)) initiated by rank 2 for 1_stage_backward_1
INFO:root:[2][1] Completing transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=111)) from 2 for runlist item 1_stage_backward_1
INFO:root:[2][1] Starting transfer
INFO:root:[2][1] Still waiting for 2 operands.
INFO:root:[2][1] Completing transfer of value UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=131), ForkId = GloballyUniqueId(created_on=2, local_id=25)) from 3 for runlist item 1_stage_backward_1
INFO:root:[2][1] Still waiting for 1 operands.
INFO:root:[1][1] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=107)) initiated by rank 2 for 1_stage_backward_1
INFO:root:[2][1] Completing transfer of value UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=107), ForkId = GloballyUniqueId(created_on=2, local_id=29)) from 1 for runlist item 1_stage_backward_1
INFO:root:[2][1] All operands ready, initialize as READY workitem
INFO:root:[2] Dequeueing workitem from set of 1
INFO:root:[2][1] Got WorkItem WorkItem(%stage_backward_1 : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_2, output_grads: %getitem_2, input_values: [%submod_1]}))
INFO:root:[2][1] Running backward phase. Retrieving stashed values
INFO:root:[2][1] Running backward
INFO:root:[2][1] Populating result of type <class 'tuple'> for 1_stage_backward_1
INFO:root:[1] Issue command to run %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%stage_backward_1, 0), kwargs = {})
INFO:root:[1] Issue command to run %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%stage_backward_1, 1), kwargs = {})
INFO:root:[1] Issue command to run %getitem_6 : [#users=1] = call_function[target=operator.getitem](args = (%getitem_4, 0), kwargs = {})
INFO:root:[1] Issue command to run %stage_backward_2 : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_1, output_grads: %getitem_6, input_values: [%submod_0]})
INFO:root:[root][1] Issuing BW invocation for target submod_1 on rank 1
INFO:root:[1][1] Received invoke call for %stage_backward_2 : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_1, output_grads: %getitem_6, input_values: [%submod_0]})
INFO:root:[1][1] Invoke call found 3 RRef arguments
INFO:root:[1][1] Invoke instantiated WorkItem WorkItem(%stage_backward_2 : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_1, output_grads: %getitem_6, input_values: [%submod_0]})) with key 1_stage_backward_2
INFO:root:[1][1] Scheduling WorkItem as WAITING workitem
INFO:root:[1][1] Current waiting runlist keys: dict_keys([])
INFO:root:[1][1] Launching asynchronous data transfer for RRef 0 OwnerRRef(GloballyUniqueId(created_on=0, local_id=107))
INFO:root:[1][1] Launching asynchronous data transfer for RRef 1 UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=151), ForkId = GloballyUniqueId(created_on=0, local_id=155))
INFO:root:[1][1] Starting transfer
INFO:root:[1][1] Launching asynchronous data transfer for RRef 2 UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=104), ForkId = GloballyUniqueId(created_on=0, local_id=156))
INFO:root:[1][1] Starting transfer
INFO:root:[1][1] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=107)) initiated by rank 1 for 1_stage_backward_2
INFO:root:[2][1] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=151)) initiated by rank 1 for 1_stage_backward_2
INFO:root:[1][1] Completing transfer of value UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=151), ForkId = GloballyUniqueId(created_on=1, local_id=25)) from 2 for runlist item 1_stage_backward_2
INFO:root:[1][1] Starting transfer
INFO:root:[1][1] Still waiting for 2 operands.
INFO:root:[1][1] Completing transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=107)) from 1 for runlist item 1_stage_backward_2
INFO:root:[1][1] Still waiting for 1 operands.
INFO:root:[0][1] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=104)) initiated by rank 1 for 1_stage_backward_2
INFO:root:[1][1] Completing transfer of value UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=104), ForkId = GloballyUniqueId(created_on=1, local_id=29)) from 0 for runlist item 1_stage_backward_2
INFO:root:[1][1] All operands ready, initialize as READY workitem
INFO:root:[1] Dequeueing workitem from set of 1
INFO:root:[1][1] Got WorkItem WorkItem(%stage_backward_2 : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_1, output_grads: %getitem_6, input_values: [%submod_0]}))
INFO:root:[1][1] Running backward phase. Retrieving stashed values
INFO:root:[1][1] Running backward
INFO:root:[1][1] Populating result of type <class 'tuple'> for 1_stage_backward_2
INFO:root:[1] Issue command to run %getitem_7 : [#users=1] = call_function[target=operator.getitem](args = (%stage_backward_2, 0), kwargs = {})
INFO:root:[1] Issue command to run %getitem_8 : [#users=1] = call_function[target=operator.getitem](args = (%stage_backward_2, 1), kwargs = {})
INFO:root:[1] Issue command to run %getitem_9 : [#users=1] = call_function[target=operator.getitem](args = (%getitem_7, 0), kwargs = {})
INFO:root:[1] Issue command to run %stage_backward_3 : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_0, output_grads: %getitem_9, input_values: [%x]})
INFO:root:[root][1] Issuing BW invocation for target submod_0 on rank 0
INFO:root:[1] Issue command to run %getitem_10 : [#users=1] = call_function[target=operator.getitem](args = (%stage_backward_3, 0), kwargs = {})
INFO:root:[0][1] Received invoke call for %stage_backward_3 : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_0, output_grads: %getitem_9, input_values: [%x]})
INFO:root:[0][1] Invoke call found 2 RRef arguments
INFO:root:[0][1] Invoke instantiated WorkItem WorkItem(%stage_backward_3 : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_0, output_grads: %getitem_9, input_values: [%x]})) with key 1_stage_backward_3
INFO:root:[0][1] Scheduling WorkItem as WAITING workitem
INFO:root:[0][1] Current waiting runlist keys: dict_keys([])
INFO:root:[0][1] Launching asynchronous data transfer for RRef 0 OwnerRRef(GloballyUniqueId(created_on=0, local_id=104))
INFO:root:[0][1] Launching asynchronous data transfer for RRef 1 UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=168), ForkId = GloballyUniqueId(created_on=0, local_id=172))
INFO:root:[0][1] Starting transfer
INFO:root:[0][1] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=104)) initiated by rank 0 for 1_stage_backward_3
INFO:root:[0][1] Starting transfer
INFO:root:[1][1] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=168)) initiated by rank 0 for 1_stage_backward_3
INFO:root:[0][1] Completing transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=104)) from 0 for runlist item 1_stage_backward_3
INFO:root:[0][1] Still waiting for 1 operands.
INFO:root:[0][1] Completing transfer of value UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=168), ForkId = GloballyUniqueId(created_on=0, local_id=179)) from 1 for runlist item 1_stage_backward_3
INFO:root:[0][1] All operands ready, initialize as READY workitem
INFO:root:[0] Dequeueing workitem from set of 1
INFO:root:[0][1] Got WorkItem WorkItem(%stage_backward_3 : [#users=2] = call_function[target=pippy.IR.stage_backward](args = (), kwargs = {stage_output: %submod_0, output_grads: %getitem_9, input_values: [%x]}))
INFO:root:[0][1] Running backward phase. Retrieving stashed values
INFO:root:[0][1] Running backward
INFO:root:[0][1] Populating result of type <class 'tuple'> for 1_stage_backward_3
INFO:root:[1] Issue command to run %getitem_11 : [#users=1] = call_function[target=operator.getitem](args = (%stage_backward_3, 1), kwargs = {})
INFO:root:[1] Issue command to run %getitem_12 : [#users=0] = call_function[target=operator.getitem](args = (%getitem_10, 0), kwargs = {})
INFO:root:[1] Issue command to run %sync_barrier : [#users=1] = call_function[target=pippy.IR.sync_barrier](args = (%submod_3, [%getitem_1, %getitem_5, %getitem_8, %getitem_11]), kwargs = {})
INFO:root:[root][1] Issuing sync invocation on rank 3
INFO:root:[3][1] Received invoke call for %sync_barrier : [#users=1] = call_function[target=pippy.IR.sync_barrier](args = (%submod_3, [%getitem_1, %getitem_5, %getitem_8, %getitem_11]), kwargs = {})
INFO:root:[3][1] Invoke call found 5 RRef arguments
INFO:root:[3][1] Invoke instantiated WorkItem WorkItem(%sync_barrier : [#users=1] = call_function[target=pippy.IR.sync_barrier](args = (%submod_3, [%getitem_1, %getitem_5, %getitem_8, %getitem_11]), kwargs = {})) with key 1_sync_barrier
INFO:root:[3][1] Scheduling WorkItem as WAITING workitem
INFO:root:[3][1] Current waiting runlist keys: dict_keys([])
INFO:root:[3][1] Launching asynchronous data transfer for RRef 0 OwnerRRef(GloballyUniqueId(created_on=0, local_id=115))
INFO:root:[3][1] Launching asynchronous data transfer for RRef 1 OwnerRRef(GloballyUniqueId(created_on=0, local_id=127))
INFO:root:[3][1] Starting transfer
INFO:root:[3][1] Launching asynchronous data transfer for RRef 2 UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=147), ForkId = GloballyUniqueId(created_on=0, local_id=191))
INFO:root:[3][1] Starting transfer
INFO:root:[3][1] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=115)) initiated by rank 3 for 1_sync_barrier
INFO:root:[3][1] Launching asynchronous data transfer for RRef 3 UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=164), ForkId = GloballyUniqueId(created_on=0, local_id=192))
INFO:root:[3][1] Launching asynchronous data transfer for RRef 4 UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=185), ForkId = GloballyUniqueId(created_on=0, local_id=193))
INFO:root:[3][1] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=127)) initiated by rank 3 for 1_sync_barrier
INFO:root:[3][1] Starting transfer
INFO:root:[3][1] Completing transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=115)) from 3 for runlist item 1_sync_barrier
INFO:root:[3][1] Starting transfer
INFO:root:[2][1] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=147)) initiated by rank 3 for 1_sync_barrier
INFO:root:[3][1] Starting transfer
INFO:root:[3][1] Still waiting for 4 operands.
INFO:root:[3][1] Completing transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=127)) from 3 for runlist item 1_sync_barrier
INFO:root:[1][1] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=164)) initiated by rank 3 for 1_sync_barrier
INFO:root:[3][1] Completing transfer of value UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=147), ForkId = GloballyUniqueId(created_on=3, local_id=53)) from 2 for runlist item 1_sync_barrier
INFO:root:[3][1] Still waiting for 3 operands.
INFO:root:[3][1] Still waiting for 2 operands.
INFO:root:[3][1] Completing transfer of value UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=164), ForkId = GloballyUniqueId(created_on=3, local_id=57)) from 1 for runlist item 1_sync_barrier
INFO:root:[3][1] Still waiting for 1 operands.
INFO:root:[0][1] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=185)) initiated by rank 3 for 1_sync_barrier
INFO:root:[3][1] Completing transfer of value UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=185), ForkId = GloballyUniqueId(created_on=3, local_id=60)) from 0 for runlist item 1_sync_barrier
INFO:root:[3][1] All operands ready, initialize as READY workitem
INFO:root:[3] Dequeueing workitem from set of 1
INFO:root:[3][1] Got WorkItem WorkItem(%sync_barrier : [#users=1] = call_function[target=pippy.IR.sync_barrier](args = (%submod_3, [%getitem_1, %getitem_5, %getitem_8, %getitem_11]), kwargs = {}))
INFO:root:[3][1] Running sync_barrier
INFO:root:[3][1] Populating result of type <class 'torch.Tensor'> for 1_sync_barrier
INFO:root:[2] Issue command to run %x : [#users=2] = placeholder[target=x]
INFO:root:[2] Issue command to run %targets : [#users=2] = placeholder[target=targets]
INFO:root:[2] Issue command to run %submod_0 : [#users=3] = call_module[target=submod_0](args = (%x,), kwargs = {})
INFO:root:[root][2] Issuing Phase.FORWARD invocation for target submod_0 on rank 0
INFO:root:[2] Issue command to run %submod_1 : [#users=3] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
INFO:root:[root][2] Issuing Phase.FORWARD invocation for target submod_1 on rank 1
INFO:root:[1][2] Received invoke call for %submod_1 : [#users=3] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})
INFO:root:[1][2] Invoke call found 1 RRef arguments
INFO:root:[1][2] Invoke instantiated WorkItem WorkItem(%submod_1 : [#users=3] = call_module[target=submod_1](args = (%submod_0,), kwargs = {})) with key 2_submod_1
INFO:root:[1][2] Scheduling WorkItem as WAITING workitem
INFO:root:[1][2] Current waiting runlist keys: dict_keys([])
INFO:root:[1][2] Launching asynchronous data transfer for RRef 0 UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=197), ForkId = GloballyUniqueId(created_on=0, local_id=199))
INFO:root:[1][2] Starting transfer
INFO:root:[0][2] Received invoke call for %submod_0 : [#users=3] = call_module[target=submod_0](args = (%x,), kwargs = {})
INFO:root:[0][2] Invoke call found 0 RRef arguments
INFO:root:[0][2] Executing async transfer of value OwnerRRef(GloballyUniqueId(created_on=0, local_id=197)) initiated by rank 1 for 2_submod_1
INFO:root:[0][2] Invoke instantiated WorkItem WorkItem(%submod_0 : [#users=3] = call_module[target=submod_0](args = (%x,), kwargs = {})) with key 2_submod_0
INFO:root:[0][2] No RRef arguments. Scheduling directly as READY workitem
INFO:root:[0][2] Current ready runlist keys: dict_keys([])
INFO:root:[0] Dequeueing workitem from set of 1
INFO:root:[0][2] Got WorkItem WorkItem(%submod_0 : [#users=3] = call_module[target=submod_0](args = (%x,), kwargs = {}))
INFO:root:[0][2] Running forward module
INFO:root:[0][2] Populating result of type <class 'torch.Tensor'> for 2_submod_0
INFO:root:[1][2] Completing transfer of value UserRRef(RRefId = GloballyUniqueId(created_on=0, local_id=197), ForkId = GloballyUniqueId(created_on=1, local_id=34)) from 0 for runlist item 2_submod_1
INFO:root:[1][2] All operands ready, initialize as READY workitem
INFO:root:[1] Dequeueing workitem from set of 1
INFO:root:[1][2] Got WorkItem WorkItem(%submod_1 : [#users=3] = call_module[target=submod_1](args = (%submod_0,), kwargs = {}))
INFO:root:[1][2] Running forward module
